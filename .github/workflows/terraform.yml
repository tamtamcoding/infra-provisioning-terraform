name: Terraform Deploy

on:
  push:
    branches:
      - main

jobs:
  terraform:
    runs-on: ubuntu-latest
    environment: aws
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: 1.0.0

    - name: Initialize Terraform
      run: terraform init

    - name: Plan Terraform changes
      run: terraform plan -out=tfplan

    - name: Apply Terraform changes
      env:
        AWS_PRIVATE_KEY: ${{ secrets.AWS_EC2_KEY }}
      run: |
        echo "$AWS_PRIVATE_KEY" > private_key.pem
        chmod 600 private_key.pem  # Secure the private key file
        terraform apply --auto-approve

    - name: Copy CloudWatch Agent JSON config
      env:
        AWS_PRIVATE_KEY: ${{ secrets.AWS_EC2_KEY }}
      run: |
        scp -o StrictHostKeyChecking=no -i private_key.pem \
        aws_cloudwatch_agent/jenkins_cloudwatch_agent.json ec2-user@${{ secrets.JENKINS_SERVER_IP }}:/opt/aws/amazon-cloudwatch-agent/etc/amazon-cloudwatch-agent.json
        
        scp -o StrictHostKeyChecking=no -i private_key.pem \
        aws_cloudwatch_agent/ansible_cloudwatch_agent.json ec2-user@${{ secrets.ANSIBLE_SERVER_IP }}:/opt/aws/amazon-cloudwatch-agent/etc/amazon-cloudwatch-agent.json
        
        scp -o StrictHostKeyChecking=no -i private_key.pem \
        aws_cloudwatch_agent/webapp_cloudwatch_agent.json ec2-user@${{ secrets.WEBAPP_SERVER_IP }}:/opt/aws/amazon-cloudwatch-agent/etc/amazon-cloudwatch-agent.json

        ssh -o StrictHostKeyChecking=no -i private_key.pem ec2-user@${{ secrets.JENKINS_SERVER_IP }} "sudo systemctl restart amazon-cloudwatch-agent"
        ssh -o StrictHostKeyChecking=no -i private_key.pem ec2-user@${{ secrets.ANSIBLE_SERVER_IP }} "sudo systemctl restart amazon-cloudwatch-agent"
        ssh -o StrictHostKeyChecking=no -i private_key.pem ec2-user@${{ secrets.WEBAPP_SERVER_IP }} "sudo systemctl restart amazon-cloudwatch-agent"

    - name: Clean up
      run: rm tfplan private_key.pem
